{
  "_args": [
    [
      "etcher-latest-version@https://registry.npmjs.org/etcher-latest-version/-/etcher-latest-version-1.0.0.tgz",
      "/home/alumno/paquetes/src/huayra-clonar"
    ]
  ],
  "_from": "etcher-latest-version@latest",
  "_id": "etcher-latest-version@1.0.0",
  "_inCache": true,
  "_location": "/etcher-latest-version",
  "_phantomChildren": {},
  "_requested": {
    "name": "etcher-latest-version",
    "raw": "etcher-latest-version@https://registry.npmjs.org/etcher-latest-version/-/etcher-latest-version-1.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/etcher-latest-version/-/etcher-latest-version-1.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/etcher-latest-version/-/etcher-latest-version-1.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/etcher-latest-version/-/etcher-latest-version-1.0.0.tgz",
  "_shasum": "ac668e451aa46176487287a1e2b9a29213e62470",
  "_shrinkwrap": null,
  "_spec": "etcher-latest-version@https://registry.npmjs.org/etcher-latest-version/-/etcher-latest-version-1.0.0.tgz",
  "_where": "/home/alumno/paquetes/src/huayra-clonar",
  "author": {
    "email": "juan@resin.io",
    "name": "Juan Cruz Viotti"
  },
  "bugs": {
    "url": "https://github.com/resin-io-modules/etcher-latest-version/issues"
  },
  "dependencies": {
    "semver": "^5.2.0",
    "xml2js": "^0.4.16"
  },
  "description": "Get Etcher latest available version",
  "devDependencies": {
    "browserify": "^13.0.1",
    "jsdoc-to-markdown": "^1.3.6",
    "jshint": "^2.9.1",
    "karma": "^0.13.22",
    "karma-browserify": "^5.0.5",
    "karma-mocha": "^1.0.1",
    "karma-phantomjs-launcher": "^1.0.0",
    "mocha": "^2.5.3",
    "mochainon": "^1.0.0",
    "phantomjs-prebuilt": "^2.1.7",
    "watchify": "^3.7.0"
  },
  "directories": {
    "test": "tests"
  },
  "homepage": "https://github.com/resin-io-modules/etcher-latest-version",
  "keywords": [
    "etcher",
    "latest",
    "version"
  ],
  "license": "Apache-2.0",
  "main": "index.js",
  "name": "etcher-latest-version",
  "optionalDependencies": {},
  "readme": "etcher-latest-version\n=====================\n\n> Utility to determine which is the latest published Etcher version\n\n[![npm version](https://badge.fury.io/js/etcher-latest-version.svg)](http://badge.fury.io/js/etcher-latest-version)\n[![dependencies](https://david-dm.org/resin-io-modules/etcher-latest-version.svg)](https://david-dm.org/resin-io-modules/etcher-latest-version.svg)\n[![Build Status](https://travis-ci.org/resin-io-modules/etcher-latest-version.svg?branch=master)](https://travis-ci.org/resin-io-modules/etcher-latest-version)\n\nInstallation\n------------\n\nInstall `etcher-latest-version` by running:\n\n```sh\n$ npm install --save etcher-latest-version\n```\n\nDocumentation\n-------------\n\n<a name=\"exp_module_etcher-latest-version--module.exports\"></a>\n\n### module.exports(request, callback) ⏏\nIn order to make this function easily usable in both NodeJS and the browser,\nwe decouple the latest version finder logic from the function that performs\nthe HTTP GET request to the bucket URL.\n\nYou should pass a `request` function that takes two parameters: the `url` and\na `callback`, and should call the latter with result of making an HTTP GET\nrequest to the passed URL.\n\nFor example, if you're using Angular, the request function will look something\nlike this:\n\n```\nconst request = (url, callback) => {\n  $http.get(url).then((response) => {\n    return callback(null, response.data);\n  }).catch((error) => {\n    return callback(error);\n  });\n};\n```\n\n**Kind**: Exported function  \n**Summary**: Get Etcher latest version  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| request | <code>function</code> | HTTP GET request function |\n| callback | <code>function</code> | callback (error, latestVersion) |\n\n**Example**  \n```js\nconst request = require('request');\nconst etcherLatestVersion = require('etcher-latest-version');\n\netcherLatestVersion((url, callback) => {\n  request(url, function(error, response, body) {\n    return callback(error, body);\n  });\n}, (error, latestVersion) => {\n  if (error) {\n    throw error;\n  }\n\n  console.log(`The latest version is: ${latestVersion}`);\n});\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io-modules/etcher-latest-version/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ npm test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io-modules/etcher-latest-version/issues](https://github.com/resin-io-modules/etcher-latest-version/issues)\n- Source Code: [github.com/resin-io-modules/etcher-latest-version](https://github.com/resin-io-modules/etcher-latest-version)\n\nBefore submitting a PR, please make sure that you include tests, and that [jshint](http://jshint.com) runs without any warning:\n\n```sh\n$ npm run lint\n```\n\nLicense\n-------\n\nThe project is licensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/resin-io-modules/etcher-latest-version.git"
  },
  "scripts": {
    "lint": "jshint --config .jshintrc --reporter unix index.js test.spec.js karma.conf.js",
    "readme": "jsdoc2md --template doc/README.hbs index.js > README.md",
    "test": "npm run lint && npm run test:mocha && npm run test:karma",
    "test:karma": "karma start",
    "test:mocha": "mocha test.spec.js -R spec"
  },
  "version": "1.0.0"
}
