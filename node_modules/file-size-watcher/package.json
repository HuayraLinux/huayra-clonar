{
  "_args": [
    [
      "file-size-watcher@https://registry.npmjs.org/file-size-watcher/-/file-size-watcher-0.2.1.tgz",
      "/home/alumno/paquetes/src/huayra-clonar"
    ]
  ],
  "_from": "file-size-watcher@>=0.2.0 <0.3.0",
  "_id": "file-size-watcher@0.2.1",
  "_inCache": true,
  "_location": "/file-size-watcher",
  "_phantomChildren": {},
  "_requested": {
    "name": "file-size-watcher",
    "raw": "file-size-watcher@https://registry.npmjs.org/file-size-watcher/-/file-size-watcher-0.2.1.tgz",
    "rawSpec": "https://registry.npmjs.org/file-size-watcher/-/file-size-watcher-0.2.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/file-size-watcher/-/file-size-watcher-0.2.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/file-tail"
  ],
  "_resolved": "https://registry.npmjs.org/file-size-watcher/-/file-size-watcher-0.2.1.tgz",
  "_shasum": "067ab60296a9fe4c6db8226616014d0f7a6fcb0f",
  "_shrinkwrap": null,
  "_spec": "file-size-watcher@https://registry.npmjs.org/file-size-watcher/-/file-size-watcher-0.2.1.tgz",
  "_where": "/home/alumno/paquetes/src/huayra-clonar",
  "author": {
    "name": "Alex Middeleer"
  },
  "bugs": {
    "url": "https://github.com/alexmiddeleer/node-file-size-watcher/issues"
  },
  "dependencies": {},
  "description": "Watches files for size changes, emitting an event when they do.",
  "devDependencies": {},
  "homepage": "https://github.com/alexmiddeleer/node-file-size-watcher",
  "keywords": [
    "file",
    "watch",
    "size",
    "grow"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "file-size-watcher",
  "optionalDependencies": {},
  "readme": "node-file-size-watcher\r\n===============\r\n\r\nWatches files for size changes in Node.js. Tiny, unit tested, and no dependencies.\r\n\r\n###Usage\r\n``` js\r\nrequire('file-size-watcher').watch(\"fileName.txt\").on('sizeChange',\r\n\tfunction callback(newSize, oldSize){\r\n\t\tconsole.log('The file size changed from ' + oldSize + ' to ' + newSize);\r\n\t}\r\n);\r\n```\r\n\r\nThe `watch` method returns an [EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter). It takes the following parameters:\r\n\r\n`watch(fd, [interval], [onErr], [onReady])`\r\n * `fd` - File descriptor (anything `fs.stat` accepts for a file descriptor)\r\n * `interval` - pause between checks in milliseconds.\r\n * `onErr` - Error handler.  Users can listen for `'error'` events themselves, but setting this avoids possible race conditions.\r\n * `onReady` - Same thing as onErr, but for `'ready'` event.\r\n\r\n###Events\r\n\r\n * `'sizeChange'` - passes new size and old size to listeners.\r\n * `'ready'` - passes initial size to listeners (called only once).\r\n * `'error'` - Passes any error objects to listeners. Includes ENOENTs, so prepare for lots of those if the file is missing. Program will keep running regardless of whether this is listened to.\r\n\r\n###Extras\r\n\r\nThe watcher object (`var watcher = fsw.watch(...)`), besides emitting events, also has a few additional features:\r\n\r\n```js\r\n\twatcher.stop(); // Stops watching the file\r\n\twatcher.start(); // Resumes watching the file\r\n\tconsole.log(watcher.info.size); // Returns last known size.\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexmiddeleer/node-file-growth.git"
  },
  "scripts": {
    "test": "mocha test"
  },
  "version": "0.2.1"
}
