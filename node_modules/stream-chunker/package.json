{
  "_args": [
    [
      "stream-chunker@https://registry.npmjs.org/stream-chunker/-/stream-chunker-1.2.8.tgz",
      "/home/alumno/paquetes/src/huayra-clonar"
    ]
  ],
  "_from": "stream-chunker@>=1.2.8 <2.0.0",
  "_id": "stream-chunker@1.2.8",
  "_inCache": true,
  "_location": "/stream-chunker",
  "_phantomChildren": {
    "core-util-is": "1.0.2",
    "inherits": "2.0.1",
    "process-nextick-args": "1.0.7",
    "string_decoder": "0.10.31",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "name": "stream-chunker",
    "raw": "stream-chunker@https://registry.npmjs.org/stream-chunker/-/stream-chunker-1.2.8.tgz",
    "rawSpec": "https://registry.npmjs.org/stream-chunker/-/stream-chunker-1.2.8.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/stream-chunker/-/stream-chunker-1.2.8.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/etcher-image-write"
  ],
  "_resolved": "https://registry.npmjs.org/stream-chunker/-/stream-chunker-1.2.8.tgz",
  "_shasum": "eb3af2c8aee5256cde76f0a1fea86348336d04f7",
  "_shrinkwrap": null,
  "_spec": "stream-chunker@https://registry.npmjs.org/stream-chunker/-/stream-chunker-1.2.8.tgz",
  "_where": "/home/alumno/paquetes/src/huayra-clonar",
  "author": {
    "name": "Kristian Lyngbaek"
  },
  "bugs": {
    "url": "https://github.com/klyngbaek/stream-chunker/issues"
  },
  "dependencies": {
    "through2": "~2.0.0"
  },
  "description": "A transform stream which chunks incoming data into chunkSize byte chunks",
  "devDependencies": {
    "chunky": "~0.0.0",
    "concat-stream": "~1.5.0",
    "coveralls": "^2.11.6",
    "istanbul": "^0.4.2",
    "jshint": "^2.9.1",
    "loremipstream": "~0.0.3 ",
    "tape": "~4.4.0"
  },
  "homepage": "https://github.com/klyngbaek/stream-chunker",
  "keywords": [
    "stream",
    "chunk",
    "chunker",
    "splitter",
    "split",
    "byte",
    "buffer",
    "binary",
    "transform"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "stream-chunker",
  "optionalDependencies": {},
  "readme": "# stream-chunker\n\nA transform stream which chunks incoming data into `chunkSize` byte chunks.\n\n[![NPM](https://nodei.co/npm/stream-chunker.png)](https://nodei.co/npm/stream-chunker/)\n\n[![Build Status](https://travis-ci.org/klyngbaek/stream-chunker.svg?branch=master)](https://travis-ci.org/klyngbaek/stream-chunker)\n[![Coverage Status](https://coveralls.io/repos/github/klyngbaek/stream-chunker/badge.svg?branch=master)](https://coveralls.io/github/klyngbaek/stream-chunker?branch=master)\n[![Dependency Status](https://david-dm.org/klyngbaek/stream-chunker.svg)](https://david-dm.org/klyngbaek/stream-chunker)\n[![devDependency Status](https://david-dm.org/klyngbaek/stream-chunker/dev-status.svg)](https://david-dm.org/klyngbaek/stream-chunker#info=devDependencies)\n\n## API\n\n#### `var chunker = require('stream-chunker')(chunkSize, [opts])`\nReturns a new chunker. Chunker is a duplex (transform) stream. You can write data into the\nchunker, and regardless of the incoming data, the readable side will emit data\nin `chunkSize` byte chunks. This modules has no notion of `objectMode`, everything\nwritten to this stream must be a `string` or a `buffer`.\n\n- `chunkSize`: `integer` - Size in bytes of the desired chunks.\n- `opts`\n  - `flush`: `boolean` - Optional. Flush incomplete chunk data on stream end. Default is `false`.\n  - `align`: `boolean` - Optional. Pad incomplete chunk data on stream end. Should be used in combination with `flush`. Default is `false`.\n  - `encoding`: `string` - Optional. Encoding of String chunks. Must be a valid Buffer encoding, such as `utf8` or `ascii`.\n\n## Simple Example\n```javascript\nvar fs = require('fs');\nvar chunker = require('stream-chunker');\n\nfs.createReadStream('/someFile')\n  \t.pipe(chunker(16))\n  \t.pipe(somethingThatExpects16ByteChunks());\n```\n\n## Full Working Example\n```javascript\n// Create sample input stream with 10 byte chunks\nvar Lorem = require('loremipstream');\nvar sampleStream = new Lorem({\n\tsize: 100,\n\tdataSize: 10,\n\tdataInteval: 100\n});\n\n// Create stream chunker with 16 byte chunks\nvar Chunker = require('stream-chunker');\nvar opts = {\n\tflush: true,\n\tencoding: 'utf8'\n};\nvar chunker = Chunker(16, opts);\n// make sure to add any data event listeners to chunker stream\n// before you write any data to it\nchunker.on('data', function(data) {\n    // do something with a chunk of data\n    // notice the last chunk is the flushed data\n    console.log('Chunk: ' + data);\n});\nsampleStream.pipe(chunker); // write some data to chunker to get chunked\n\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/klyngbaek/stream-chunker.git"
  },
  "scripts": {
    "cover": "istanbul cover tape test/*",
    "coveralls": "npm run cover -- --report lcovonly && cat ./coverage/lcov.info | coveralls",
    "lint": "jshint **.js",
    "test": "npm run lint && tape test/*"
  },
  "version": "1.2.8"
}
