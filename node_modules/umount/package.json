{
  "_args": [
    [
      "umount@https://registry.npmjs.org/umount/-/umount-1.1.3.tgz",
      "/home/alumno/paquetes/src/huayra-clonar"
    ]
  ],
  "_from": "umount@>=1.1.3 <2.0.0",
  "_id": "umount@1.1.3",
  "_inCache": true,
  "_location": "/umount",
  "_phantomChildren": {},
  "_requested": {
    "name": "umount",
    "raw": "umount@https://registry.npmjs.org/umount/-/umount-1.1.3.tgz",
    "rawSpec": "https://registry.npmjs.org/umount/-/umount-1.1.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/umount/-/umount-1.1.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/umount/-/umount-1.1.3.tgz",
  "_shasum": "398b7739f5b65b9359cd62c903014d9399c71b66",
  "_shrinkwrap": null,
  "_spec": "umount@https://registry.npmjs.org/umount/-/umount-1.1.3.tgz",
  "_where": "/home/alumno/paquetes/src/huayra-clonar",
  "author": {
    "email": "juanchiviotti@gmail.com",
    "name": "Juan Cruz Viotti"
  },
  "bugs": {
    "url": "https://github.com/jviotti/node-umount/issues"
  },
  "dependencies": {
    "lodash": "^3.7.0"
  },
  "description": "Umount a device in UNIX based operating systems",
  "devDependencies": {
    "chai": "~1.10.0",
    "coffee-script": "~1.8.0",
    "gulp": "~3.8.10",
    "gulp-coffee": "~2.2.0",
    "gulp-coffeelint": "~0.4.0",
    "gulp-mocha": "~2.0.0",
    "gulp-util": "~3.0.1",
    "mocha": "~2.0.1",
    "sinon": "~1.12.2",
    "sinon-chai": "~2.6.0"
  },
  "directories": {
    "test": "tests"
  },
  "homepage": "https://github.com/jviotti/node-umount",
  "keywords": [
    "umount",
    "unix",
    "device"
  ],
  "license": "MIT",
  "main": "build/umount.js",
  "name": "umount",
  "optionalDependencies": {},
  "readme": "umount\n------\n\n[![npm version](https://badge.fury.io/js/umount.svg)](http://badge.fury.io/js/umount)\n[![dependencies](https://david-dm.org/jviotti/node-umount.png)](https://david-dm.org/jviotti/node-umount.png)\n[![Build Status](https://travis-ci.org/jviotti/node-umount.svg?branch=master)](https://travis-ci.org/jviotti/node-umount)\n[![Build status](https://ci.appveyor.com/api/projects/status/q90qlg6w6x3ifte1?svg=true)](https://ci.appveyor.com/project/jviotti/node-umount)\n\nUnmount a device in UNIX, do nothing in Windows.\n\nThis module doesn't include native bindings, it constructs and runs the\ncorresponding `umount` command with [child_process.exec()](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback).\n\nIf the platform is `win32`, the `umount` function does nothing, and calls the given callback with `(null, null, null)`. This allows the client to call this module independently of the operating system while getting the desired behaviour.\n\nInstallation\n------------\n\nInstall `umount` by running:\n\n```sh\n$ npm install --save umount\n```\n\nDocumentation\n-------------\n\n### umount.umount(String device[, Object options], Function callback)\n\nUnmount a device.\n\nThe accepted options are:\n\n- `sudo`: Path to sudo (defaults to `sudo`).\n- `noSudo`: Do not run the command with sudo (defaults to `false`).\n\nThe callback gets three arguments: `(error, stdout, stderr)`.\n\nExample:\n\n```coffee\numount = require('umount') \n\numount.umount '/dev/disk2',\n\tsudo: '/usr/bin/sudo'\n\tnoSudo: false\n, (error, stdout, stderr) ->\n\tthrow error if error?\n\tconsole.log(stdout)\n```\n\n### umount.isMounted(String device, Function callback)\n\nCheck if a device is mounted.\n\n**Note:** This function always yields `true` in `win32`.\n\nThe callback gets two arguments: `(error, isMounted)`.\n\nExample:\n\n```coffee\numount = require('umount') \n\numount.isMounted '/dev/disk2', (error, isMounted) ->\n\tthrow error if error?\n\tconsole.log(\"Is Mounted? #{isMounted}\")\n```\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ gulp test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/jviotti/node-umount/issues](https://github.com/jviotti/node-umount/issues)\n- Source Code: [github.com/jviotti/node-umount](https://github.com/jviotti/node-umount)\n\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\n\n```sh\n$ gulp lint\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/jviotti/node-umount/issues/new) on GitHub.\n\nChangeLog\n---------\n\n### v1.1.3\n\n- Call `/usr/sbin/diskutil` instead of just `diskutil` in OS X.\n\n### v1.1.2\n\n- Do not use `sudo` to unmount disks in OS X.\n\n### v1.1.1\n\n- Redirect Linux `umount` stderr output to /dev/null and ignore return code.\n\n### v1.1.0\n\n- Implement umount.isMounted() function.\n\n### v1.0.1\n\n- Fix improper unmounting of multiple partitions in GNU/Linux.\n\nLicense\n-------\n\nThe project is licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/jviotti/node-umount.git"
  },
  "scripts": {
    "prepublish": "gulp build",
    "test": "gulp test"
  },
  "version": "1.1.3"
}
