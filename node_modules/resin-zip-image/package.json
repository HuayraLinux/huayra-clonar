{
  "_args": [
    [
      "resin-zip-image@https://registry.npmjs.org/resin-zip-image/-/resin-zip-image-1.1.2.tgz",
      "/home/alumno/paquetes/src/huayra-clonar"
    ]
  ],
  "_from": "resin-zip-image@>=1.1.2 <2.0.0",
  "_id": "resin-zip-image@1.1.2",
  "_inCache": true,
  "_location": "/resin-zip-image",
  "_phantomChildren": {},
  "_requested": {
    "name": "resin-zip-image",
    "raw": "resin-zip-image@https://registry.npmjs.org/resin-zip-image/-/resin-zip-image-1.1.2.tgz",
    "rawSpec": "https://registry.npmjs.org/resin-zip-image/-/resin-zip-image-1.1.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/resin-zip-image/-/resin-zip-image-1.1.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/etcher-image-stream"
  ],
  "_resolved": "https://registry.npmjs.org/resin-zip-image/-/resin-zip-image-1.1.2.tgz",
  "_shasum": "825f8713cc404f7a2d67e5d3b22fbdd84a16ad36",
  "_shrinkwrap": null,
  "_spec": "resin-zip-image@https://registry.npmjs.org/resin-zip-image/-/resin-zip-image-1.1.2.tgz",
  "_where": "/home/alumno/paquetes/src/huayra-clonar",
  "author": {
    "email": "juan@resin.io",
    "name": "Juan Cruz Viotti"
  },
  "bugs": {
    "url": "https://github.com/resin-io-modules/resin-zip-image/issues"
  },
  "dependencies": {
    "adm-zip": "^0.4.7",
    "bluebird": "^3.3.3",
    "file-type": "^3.8.0",
    "lodash": "^4.6.1",
    "read-chunk": "^1.0.1",
    "unzip2": "^0.2.5"
  },
  "description": "Resin.io Zip image manipulation utilities",
  "devDependencies": {
    "coffee-script": "~1.8.0",
    "gulp": "~3.8.10",
    "gulp-coffee": "~2.2.0",
    "gulp-coffeelint": "~0.4.0",
    "gulp-mocha": "~2.0.0",
    "gulp-util": "~3.0.1",
    "jsdoc-to-markdown": "^1.1.1",
    "mocha": "~2.0.1",
    "mochainon": "^1.0.0",
    "rindle": "^1.3.0",
    "tmp": "0.0.28"
  },
  "directories": {
    "test": "tests"
  },
  "homepage": "https://github.com/resin-io-modules/resin-zip-image",
  "keywords": [
    "resin",
    "zip",
    "image"
  ],
  "license": "Apache-2.0",
  "main": "build/zip.js",
  "name": "resin-zip-image",
  "optionalDependencies": {},
  "readme": "resin-zip-image\n===============\n\n> Resin.io Zip image manipulation utilities\n\n[![npm version](https://badge.fury.io/js/resin-zip-image.svg)](http://badge.fury.io/js/resin-zip-image)\n[![dependencies](https://david-dm.org/resin-io-modules/resin-zip-image.svg)](https://david-dm.org/resin-io-modules/resin-zip-image.svg)\n[![Build Status](https://travis-ci.org/resin-io-modules/resin-zip-image.svg?branch=master)](https://travis-ci.org/resin-io-modules/resin-zip-image)\n[![Build status](https://ci.appveyor.com/api/projects/status/5exclqpf4v6iugmp/branch/master?svg=true)](https://ci.appveyor.com/project/resin-io/resin-zip-image/branch/master)\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/resin-io/chat)\n\nRole\n----\n\nThe intention of this module is to provide low level utilities to work with Resin.io Zip images.\n\n**THIS MODULE IS LOW LEVEL AND IS NOT MEANT TO BE USED BY END USERS DIRECTLY**.\n\nInstallation\n------------\n\nInstall `resin-zip-image` by running:\n\n```sh\n$ npm install --save resin-zip-image\n```\n\nDocumentation\n-------------\n\n\n* [zip](#module_zip)\n    * [.getImageEntries(zip)](#module_zip.getImageEntries) ⇒ <code>Array.&lt;Object&gt;</code>\n    * [.isValidZipImage(zip)](#module_zip.isValidZipImage) ⇒ <code>Boolean</code>\n    * [.extractImage(zip)](#module_zip.extractImage) ⇒ <code>Promise</code>\n    * [.isZip(file)](#module_zip.isZip) ⇒ <code>Boolean</code>\n\n<a name=\"module_zip.getImageEntries\"></a>\n### zip.getImageEntries(zip) ⇒ <code>Array.&lt;Object&gt;</code>\nThis function returns an array of objects that represent\nthe \"image\" files found in the zip archive.\n\n**Kind**: static method of <code>[zip](#module_zip)</code>  \n**Summary**: Get Zip image entries  \n**Returns**: <code>Array.&lt;Object&gt;</code> - image entries  \n**Throws**:\n\n- Will throw if the zip is not a zip archive\n\n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| zip | <code>String</code> | zip file path |\n\n**Example**  \n```js\nzipImage = require('resin-zip-image')\n\nimageEntries = zipImage.getImageEntries('path/to/archive.zip')\n\nimageEntries.forEach (imageEntry) ->\n  console.log(imageEntry.name)\n  console.log(imageEntry.size)\n```\n<a name=\"module_zip.isValidZipImage\"></a>\n### zip.isValidZipImage(zip) ⇒ <code>Boolean</code>\nA Zip is considered a Zip image if it contains only one\n`*.iso` or `*.img` file.\n\nIt is still considered valid if it contains an image file\nand many other non-image files.\n\n**Kind**: static method of <code>[zip](#module_zip)</code>  \n**Summary**: Check if a Zip is a Zip image  \n**Returns**: <code>Boolean</code> - whether the zip is a zip image  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| zip | <code>String</code> | zip file path |\n\n**Example**  \n```js\nzipImage = require('resin-zip-image')\n\nif zipImage.isValidZipImage('path/to/archive.zip')\n  console.log('This is a Zip image!')\n```\n<a name=\"module_zip.extractImage\"></a>\n### zip.extractImage(zip) ⇒ <code>Promise</code>\n**Kind**: static method of <code>[zip](#module_zip)</code>  \n**Summary**: Extract the image file from a Zip image  \n**Throws**:\n\n- Will throw if the zip is not a zip image\n\n**Access:** public  \n**Fulfil**: <code>ReadableStream</code> - image file  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| zip | <code>String</code> | zip file path |\n\n**Example**  \n```js\nzipImage = require('resin-zip-image')\n\nzipImage.extractImage('path/to/archive.zip').then (stream) ->\n  stream.pipe(fs.createWriteStream('output.img'))\n```\n<a name=\"module_zip.isZip\"></a>\n### zip.isZip(file) ⇒ <code>Boolean</code>\n**Kind**: static method of <code>[zip](#module_zip)</code>  \n**Summary**: Check if a file is a zip archive  \n**Returns**: <code>Boolean</code> - whether the file is a zip archive  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| file | <code>String</code> | file path |\n\n**Example**  \n```js\nzipImage = require('resin-zip-image')\n\nif zipImage.isZip('path/to/file')\n  console.log('This file is a Zip archive!')\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io/resin-zip-image/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ gulp test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io/resin-zip-image/issues](https://github.com/resin-io/resin-zip-image/issues)\n- Source Code: [github.com/resin-io/resin-zip-image](https://github.com/resin-io/resin-zip-image)\n\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\n\n```sh\n$ gulp lint\n```\n\nLicense\n-------\n\nThe project is licensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/resin-io-modules/resin-zip-image.git"
  },
  "scripts": {
    "prepublish": "gulp build",
    "readme": "jsdoc2md --template doc/README.hbs build/zip.js > README.md",
    "test": "gulp test"
  },
  "version": "1.1.2"
}
