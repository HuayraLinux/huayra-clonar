{
  "_args": [
    [
      "denymount@https://registry.npmjs.org/denymount/-/denymount-2.2.0.tgz",
      "/home/alumno/paquetes/src/huayra-clonar"
    ]
  ],
  "_from": "denymount@>=2.1.0 <3.0.0",
  "_id": "denymount@2.2.0",
  "_inCache": true,
  "_location": "/denymount",
  "_phantomChildren": {},
  "_requested": {
    "name": "denymount",
    "raw": "denymount@https://registry.npmjs.org/denymount/-/denymount-2.2.0.tgz",
    "rawSpec": "https://registry.npmjs.org/denymount/-/denymount-2.2.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/denymount/-/denymount-2.2.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/etcher-image-write"
  ],
  "_resolved": "https://registry.npmjs.org/denymount/-/denymount-2.2.0.tgz",
  "_shasum": "7cb2dd13a9113423c5e7a139e2e7f21f7b784054",
  "_shrinkwrap": null,
  "_spec": "denymount@https://registry.npmjs.org/denymount/-/denymount-2.2.0.tgz",
  "_where": "/home/alumno/paquetes/src/huayra-clonar",
  "author": {
    "email": "akis@resin.io",
    "name": "Akis Kesoglou"
  },
  "bugs": {
    "url": "https://github.com/resin-io-modules/denymount/issues"
  },
  "contributors": [
    {
      "email": "juan@resin.io",
      "name": "Juan Cruz Viotti"
    }
  ],
  "dependencies": {
    "async": "^2.0.0-rc.2",
    "macmount": "^1.0.0"
  },
  "description": "Prevent disks from mounting in OS X",
  "devDependencies": {
    "chai": "^3.5.0",
    "eslint": "^2.4.0",
    "eslint-config-standard": "^5.1.0",
    "eslint-plugin-promise": "^1.1.0",
    "eslint-plugin-standard": "^1.3.2",
    "jsdoc-to-markdown": "^1.3.3",
    "mocha": "^2.4.5",
    "sinon": "^1.17.3",
    "sinon-chai": "^2.8.0"
  },
  "directories": {
    "test": "tests"
  },
  "homepage": "https://github.com/resin-io-modules/denymount",
  "keywords": [
    "deny",
    "mount",
    "drive",
    "prevent"
  ],
  "license": "Apache-2.0",
  "main": "lib/index.js",
  "name": "denymount",
  "optionalDependencies": {
    "macmount": "^1.0.0"
  },
  "readme": "denymount\n=========\n\n> Node.js library to prevent automatic mounting of specific disks on Mac OS X. For Mac OS X >= 10.9.\n\n[![npm version](https://badge.fury.io/js/denymount.svg)](http://badge.fury.io/js/denymount)\n[![dependencies](https://david-dm.org/resin-io-modules/denymount.svg)](https://david-dm.org/resin-io-modules/denymount.svg)\n[![Build Status](https://travis-ci.org/resin-io-modules/denymount.svg?branch=master)](https://travis-ci.org/resin-io-modules/denymount)\n\nInstallation\n------------\n\nInstall `denymount` by running:\n\n```sh\n$ npm install --save denymount\n```\n\nDocumentation\n-------------\n\n<a name=\"module_denymount..denymount\"></a>\n\n### denymount~denymount(disk, handler, [options], callback)\n**Kind**: inner method of <code>[denymount](#module_denymount)</code>  \n**Summary**: Prevent automatic mounting of an OS X disk  \n**Access:** public  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| disk | <code>String</code> |  | disk |\n| handler | <code>function</code> |  | handler (callback) |\n| [options] | <code>Object</code> |  | options |\n| [options.autoMountOnSuccess] | <code>Boolean</code> | <code>false</code> | auto-mount on exit |\n| callback | <code>function</code> |  | callback (error) |\n\n**Example**  \n```js\ndenymount('/dev/disk2', function(callback) {\n  console.log('While this code runs, /dev/disk2 is ensured to not be auto-mounted');\n  return callback(null, 'foo');\n}, {\n  autoMountOnSuccess: true\n}, function(error, message) {\n  if (error) {\n    throw error;\n  }\n\n  console.log(message);\n});\n```\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ npm test\n```\n\nDevelopment\n-----------\n\n`denymount` wraps a native command line utility that must be built with Xcode 7.\n\nIf you make edits to the executable source make sure to build it afterwards with:\n\n```sh\n$ npm run build\n```\n\nThis will build and place the compiled executable in the *bin* folder.\n\nThe command line utility can be used directly as follows:\n\n```sh\n$ ./bin/denymount diskName\n```\n\nThe programme will keep running until you hit `ctrl+C` (or `SIGINT`/`SIGTERM` if sent to background).\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io-modules/denymount/issues](https://github.com/resin-io-modules/denymount/issues)\n- Source Code: [github.com/resin-io-modules/denymount](https://github.com/resin-io-modules/denymount)\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io-modules/denymount/issues/new)\non GitHub and the Resin.io team will be happy to help.\n\nLicense\n-------\n\n*denymount* is free software, and may be redistributed under the terms specified\nin the [license](https://github.com/resin-io-modules/denymount/blob/master/LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/resin-io-modules/denymount.git"
  },
  "scripts": {
    "build": "make bin/denymount",
    "lint": "eslint **/*.js",
    "readme": "jsdoc2md --template doc/README.hbs lib/index.js > README.md",
    "test": "npm run lint && mocha --recursive tests -R progress"
  },
  "version": "2.2.0"
}
